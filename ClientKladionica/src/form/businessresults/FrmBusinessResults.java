/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.businessresults;

import controller.Controller;
import convert.Convert;
import domain.Ticket;
import domain.User;
import form.FrmMode;
import form.businessresults.model.TableModelTickets;
import form.datetimepicker.DateTimePicker;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import session.Session;

/**
 *
 * @author not-sure
 */
public class FrmBusinessResults extends javax.swing.JDialog {
    FrmMode frmMode;
    DateTimePicker dateTimePickerFrom;
    DateTimePicker dateTimePickerUntil;
    TableModelTickets tm;
    /**
     * Creates new form FrmBusinessResults
     */
    public FrmBusinessResults(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public FrmBusinessResults(java.awt.Frame parent, boolean modal, FrmMode frmMode) {
        super(parent, modal);
        initComponents();
        adjustForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCurrnetUser = new javax.swing.JPanel();
        lblCurrentUser = new javax.swing.JLabel();
        pnlDates = new javax.swing.JPanel();
        lblFrom = new javax.swing.JLabel();
        tpDateFrom = new javax.swing.JTabbedPane();
        tpDateUntil = new javax.swing.JTabbedPane();
        lblUntil = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        pnlResults = new javax.swing.JPanel();
        lblIncome = new javax.swing.JLabel();
        lblOutcome = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtOutcome = new javax.swing.JTextField();
        txtNOfPayments = new javax.swing.JTextField();
        txtNOfPayoffs = new javax.swing.JTextField();
        txtIncome = new javax.swing.JTextField();
        pnlTickets = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTickets = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlCurrnetUser.setBorder(javax.swing.BorderFactory.createTitledBorder("Current User"));

        javax.swing.GroupLayout pnlCurrnetUserLayout = new javax.swing.GroupLayout(pnlCurrnetUser);
        pnlCurrnetUser.setLayout(pnlCurrnetUserLayout);
        pnlCurrnetUserLayout.setHorizontalGroup(
            pnlCurrnetUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCurrnetUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCurrentUser, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCurrnetUserLayout.setVerticalGroup(
            pnlCurrnetUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCurrnetUserLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pnlDates.setBorder(javax.swing.BorderFactory.createTitledBorder("Dates"));

        lblFrom.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblFrom.setText("From:");

        lblUntil.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblUntil.setText("Until:");

        javax.swing.GroupLayout pnlDatesLayout = new javax.swing.GroupLayout(pnlDates);
        pnlDates.setLayout(pnlDatesLayout);
        pnlDatesLayout.setHorizontalGroup(
            pnlDatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tpDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tpDateUntil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUntil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlDatesLayout.setVerticalGroup(
            pnlDatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUntil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tpDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tpDateUntil, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        pnlResults.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        lblIncome.setText("Total income:");

        lblOutcome.setText("Total outcome:");

        jLabel3.setText("Number of payoffs:");

        jLabel4.setText("Number of payments:");

        txtOutcome.setEditable(false);

        txtNOfPayments.setEditable(false);

        txtNOfPayoffs.setEditable(false);

        txtIncome.setEditable(false);

        javax.swing.GroupLayout pnlResultsLayout = new javax.swing.GroupLayout(pnlResults);
        pnlResults.setLayout(pnlResultsLayout);
        pnlResultsLayout.setHorizontalGroup(
            pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNOfPayoffs)
                    .addComponent(txtNOfPayments)
                    .addComponent(txtOutcome)
                    .addComponent(txtIncome))
                .addContainerGap())
        );
        pnlResultsLayout.setVerticalGroup(
            pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNOfPayments, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNOfPayoffs, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pnlTickets.setBorder(javax.swing.BorderFactory.createTitledBorder("Tickets"));

        tblTickets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTickets);

        javax.swing.GroupLayout pnlTicketsLayout = new javax.swing.GroupLayout(pnlTickets);
        pnlTickets.setLayout(pnlTicketsLayout);
        pnlTicketsLayout.setHorizontalGroup(
            pnlTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTicketsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnlTicketsLayout.setVerticalGroup(
            pnlTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTicketsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnView)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTickets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCurrnetUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCurrnetUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTickets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlResults, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        pnlResults.setVisible(false);
        pnlTickets.setVisible(false);
        Date dateFrom = dateTimePickerFrom.getDate();
        Date dateUntil = dateTimePickerUntil.getDate();
        
        if(!dateFrom.before(dateUntil)){
            JOptionPane.showMessageDialog(rootPane, "Business results are not found! Date from must be before date until");
            return;
        }
        
        if(dateFrom.after(new Date()) || dateUntil.after(new Date())){
            JOptionPane.showMessageDialog(rootPane, "Business results are not found! Dates cannot be in future");
            return;
        }
        
        try {
            Object[] array = Controller.getInstance().getBussinessResults(dateFrom, dateUntil);
            txtIncome.setText(""+(double)array[0]);
            txtOutcome.setText(""+(double)array[1]);
            txtNOfPayments.setText(""+(int)array[2]);
            txtNOfPayoffs.setText(""+(int)array[3]);
            List<Ticket> list = (List<Ticket>)array[4];
            tm.setList(list);
        } catch (Exception ex) {
            Logger.getLogger(FrmBusinessResults.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Business results are not found! "+ex.getMessage());
            return;
        }
        pnlResults.setVisible(true);
        pnlTickets.setVisible(true);
        refreshDate();
    }//GEN-LAST:event_btnViewActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCurrentUser;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblIncome;
    private javax.swing.JLabel lblOutcome;
    private javax.swing.JLabel lblUntil;
    private javax.swing.JPanel pnlCurrnetUser;
    private javax.swing.JPanel pnlDates;
    private javax.swing.JPanel pnlResults;
    private javax.swing.JPanel pnlTickets;
    private javax.swing.JTable tblTickets;
    private javax.swing.JTabbedPane tpDateFrom;
    private javax.swing.JTabbedPane tpDateUntil;
    private javax.swing.JTextField txtIncome;
    private javax.swing.JTextField txtNOfPayments;
    private javax.swing.JTextField txtNOfPayoffs;
    private javax.swing.JTextField txtOutcome;
    // End of variables declaration//GEN-END:variables
    private void setScreenCenter() {
        setLocationRelativeTo(null);
    }
    
    private void populateCurrentUser() {
        User u = Session.getInstance().getCurreUser();
        lblCurrentUser.setText(u.toString());
    }
    
    private void populateDate() {
        Date date = new Date();
        
        dateTimePickerFrom = new DateTimePicker();
        dateTimePickerFrom.setFormats(DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.MEDIUM));
        dateTimePickerFrom.setTimeFormat(DateFormat.getTimeInstance(DateFormat.MEDIUM));
        dateTimePickerFrom.setDate(Convert.addHours(date, -24));
        tpDateFrom.add(dateTimePickerFrom);
        
        dateTimePickerUntil = new DateTimePicker();
        dateTimePickerUntil.setFormats(DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.MEDIUM));
        dateTimePickerUntil.setTimeFormat(DateFormat.getTimeInstance(DateFormat.MEDIUM));
        dateTimePickerUntil.setDate(date);
        tpDateUntil.add(dateTimePickerUntil);
    }
    private void refreshDate(){
        Date date = new Date();
        
        dateTimePickerFrom.setDate(Convert.addHours(date, -24));
        dateTimePickerUntil.setDate(date);
        try {
            dateTimePickerFrom.commitEdit();
            dateTimePickerUntil.commitEdit();

        } catch (ParseException ex) {
            Logger.getLogger(FrmBusinessResults.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void adjustForm() {
        setTitle("Business results");
        this.frmMode = frmMode;
        pnlResults.setVisible(false);
        setScreenCenter();
        populateCurrentUser();
        populateDate();
        pnlTickets.setVisible(false);
        tm = new TableModelTickets();
        tblTickets.setModel(tm);
        tblTickets.getColumnModel().getColumn(4).setWidth(150);
        tblTickets.getColumnModel().getColumn(4).setMinWidth(150);
    }
}
